//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#define ZMK_POINTING_DEFAULT_MOVE_VAL 700  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// #include "combos.dtsi" // Must be sourced after HRM-combo hack.
// #include "leader.dtsi"
// #include "mouse.dtsi"

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

/ {
    combos {
        compatible = "zmk,combos";

        WinSpR {
            bindings = <&kp LG(SPACE)>;
            key-positions = <16 17>;
        };

        to0l {
            bindings = <&to 0>;
            key-positions = <0 10>;
        };

        to0r {
            bindings = <&to 0>;
            key-positions = <19 9>;
        };

        to1l {
            bindings = <&to 3>;
            key-positions = <1 11>;
        };

        to1r {
            bindings = <&to 3>;
            key-positions = <8 18>;
        };

        to2l {
            bindings = <&to 2>;
            key-positions = <2 12>;
        };

        to2r {
            bindings = <&to 2>;
            key-positions = <7 17>;
        };

        to3l {
            bindings = <&to 4>;
            key-positions = <3 13>;
        };

        to3r {
            bindings = <&to 4>;
            key-positions = <6 16>;
        };

        to4l {
            bindings = <&to 5>;
            key-positions = <21 10>;
        };

        to4r {
            bindings = <&to 5>;
            key-positions = <30 19>;
        };

        to5l {
            bindings = <&to 6>;
            key-positions = <11 22>;
        };

        to5r {
            bindings = <&to 6>;
            key-positions = <29 18>;
        };

        to6l {
            bindings = <&to 7>;
            key-positions = <23 12>;
        };

        to6r {
            bindings = <&to 7>;
            key-positions = <28 17>;
        };

        to7l {
            bindings = <&to 8>;
            key-positions = <24 13>;
        };

        to7r {
            bindings = <&to 8>;
            key-positions = <27 16>;
        };

        WinSpL {
            bindings = <&kp LG(SPACE)>;
            key-positions = <13 12>;
        };
    };

    behaviors {
        tdSpRe: tdSpRe {
            compatible = "zmk,behavior-tap-dance";
            label = "TDSPRE";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp ENTER>;

            tapping-term-ms = <300>;
        };

        tdBkDe: tdBkDe {
            compatible = "zmk,behavior-tap-dance";
            label = "TDBKDE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DEL>;
        };

        tdShCwCa: tdShCwCa {
            compatible = "zmk,behavior-tap-dance";
            label = "TDSHCWCA";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>, <&kt LEFT_SHIFT>;
        };

        tdCoSe: tdCoSe {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCOSE";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
        };

        tdDoCo: tdDoCo {
            compatible = "zmk,behavior-tap-dance";
            label = "TDDOCO";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
        };

        tdAe: tdAe {
            compatible = "zmk,behavior-tap-dance";
            label = "TDAE";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp SQT>;
        };

        tdOe: tdOe {
            compatible = "zmk,behavior-tap-dance";
            label = "TDOE";
            #binding-cells = <0>;
            bindings = <&kp O>, <&kp SEMICOLON>;
        };

        tdUe: tdUe {
            compatible = "zmk,behavior-tap-dance";
            label = "TDUE";
            #binding-cells = <0>;
            bindings = <&kp U>, <&kp LEFT_BRACKET>;
        };

        tdSs: tdSs {
            compatible = "zmk,behavior-tap-dance";
            label = "TDSS";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp MINUS>;
        };

        tdCircAcuteGrave: tdCircAcuteGrave {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCIRCACUTEGRAVE";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp EQUAL>, <&kp PLUS>;

            tapping-term-ms = <300>;
        };

        tdPUePlus: tdPUePlus {
            compatible = "zmk,behavior-tap-dance";
            label = "TDPUEPLUS";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp LEFT_BRACKET>, <&kp PLUS>;

            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_0 {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     S     ┃     D     ┃     F     ┃     G     ┃   ┃     H     ┃     J     ┃     K     ┃     L     ┃     ;     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
           &kp Q  &kp W  &kp E                      &kp R               &kp T      &kp Y    &tdUe              &kp I                  &tdOe       &tdPUePlus
           &tdAe  &tdSs  &kp D                      &kp F               &kp G      &kp H    &kp J              &kp K                  &kp L       &kp SEMICOLON
&tdShCwCa  &kp Z  &kp X  &kp C                      &kp V               &kp B      &kp N    &kp M              &kp COMMA              &kp PERIOD  &kp SLASH      &kp SQT
                         &mt LEFT_CONTROL QUESTION  &mt LEFT_ALT TILDE  &tdSpRe    &tdBkDe  &mt RIGHT_ALT TAB  &mt RCTRL EXCLAMATION
            >;
        };

        base_rev_1 {
            label = "BASEREV";
            bindings = <
         &tdPUePlus     &tdOe    &kp I                         &tdUe         &kp Y      &kp T    &kp R               &kp E               &kp W  &kp Q
         &kp SEMICOLON  &kp L    &kp K                         &kp J         &kp H      &kp G    &kp F               &kp D               &tdSs  &tdAe
&kp SQT  &kp FSLH       &kp DOT  &kp COMMA                     &kp M         &kp N      &kp B    &kp V               &kp C               &kp X  &kp Z  &tdShCwCa
                                 &mt LEFT_CONTROL EXCLAMATION  &mt RALT TAB  &tdBkDe    &tdSpRe  &mt LEFT_ALT TILDE  &mt RCTRL QUESTION
            >;
        };

        coding_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "CODE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
            &kp GRAVE  &kp DOLLAR    &kp DOUBLE_QUOTES  &kp LESS_THAN    &kp LBRC            &kp RBRC           &kp GREATER_THAN  &kp SINGLE_QUOTE  &kp PERCENT      &kp KP_PLUS
            &kp CARET  &kp QUESTION  &kp BSLH           &kp EQUAL        &kp LBKT            &kp RBKT           &kp UNDERSCORE    &kp FSLH          &kp EXCLAMATION  &kp AT_SIGN
&kp ESCAPE  &kp DEL    &kp TILDE     &kp PIPE           &kp MINUS        &kp LPAR            &kp RPAR           &kp PLUS          &kp ASTERISK      &kp HASH         &kp KP_MULTIPLY  &kp ESCAPE
                                     &kp LEFT_ARROW     &kp RIGHT_ARROW  &kp LEFT_CONTROL    &kp RIGHT_CONTROL  &kp UP_ARROW      &kp DOWN_ARROW
            >;
        };

        num_layer {
            bindings = <
        &kp LEFT_ALT   &kp N9  &kp N8  &kp N7    &kp PLUS        &kp PLUS      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp RIGHT_ALT
        &kp RIGHT_ALT  &kp N6  &kp N5  &kp N4    &kp MINUS       &kp MINUS     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp LEFT_ALT
&trans  &trans         &kp N3  &kp N2  &kp N1    &kp ASTERISK    &kp ASTERISK  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans         &trans
                               &kp N0  &kp FSLH  &kp ENTER       &kp KP_ENTER  &kp FSLH         &kp KP_NUMBER_0
            >;

            label = "NUM";
        };

        fn_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "FN";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
         &kp F11  &kp F12  &trans  &trans  &trans     &trans   &trans  &trans  &kp F12  &kp F11
         &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &kp F10  &kp F9  &kp F8  &kp F7   &kp F6
&kp ESC  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &kp F5   &kp F4  &kp F3  &kp F2   &kp F1   &kp ESC
                           &trans  &trans  &trans     &trans   &trans  &trans
            >;
        };

        mouse_layer {
            bindings = <
            &kp PAGE_UP     &mkp MB5        &mmv MOVE_UP    &mkp MB4         &msc SCRL_UP       &msc SCRL_UP    &mkp MB4        &mmv MOVE_UP    &mkp MB5         &kp PAGE_UP
            &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT    &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT
&kp ESCAPE  &kp PAGE_DOWN   &mkp RCLK       &mkp MCLK       &mkp LCLK        &msc SCRL_DOWN     &msc SCRL_DOWN  &mkp LCLK       &mkp MCLK       &mkp RCLK        &kp PAGE_DOWN    &kp ESCAPE
                                            &mkp RCLK       &mkp MCLK        &mkp LCLK          &mkp LCLK       &mkp MCLK       &mkp RCLK
            >;

            label = "MOUSE";
        };

        bt_layer {
            bindings = <
                &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0
                &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &bt BT_DISC 4  &bt BT_DISC 3  &bt BT_DISC 2  &bt BT_DISC 1  &bt BT_DISC 0
&bt BT_CLR_ALL  &bt BT_CLR     &out OUT_BLE   &out OUT_USB   &out OUT_TOG   &trans           &trans         &out OUT_TOG   &out OUT_USB   &out OUT_BLE   &bt BT_CLR     &bt BT_CLR_ALL
                                              &bt BT_PRV     &trans         &bt BT_NXT       &bt BT_NXT     &trans         &bt BT_PRV
            >;

            label = "BT";
        };

        nav_layer {
            bindings = <
        &trans  &trans  &kp C_KEYBOARD_INPUT_ASSIST_PREVIOUS_GROUP  &kp C_KEYBOARD_INPUT_ASSIST_NEXT_GROUP  &trans    &trans  &kp C_KEYBOARD_INPUT_ASSIST_NEXT_GROUP  &kp C_KEYBOARD_INPUT_ASSIST_PREVIOUS_GROUP  &trans  &trans
        &trans  &trans  &kp C_KEYBOARD_INPUT_ASSIST_PREVIOUS        &kp C_KEYBOARD_INPUT_ASSIST_NEXT        &trans    &trans  &kp C_KEYBOARD_INPUT_ASSIST_NEXT        &kp C_KEYBOARD_INPUT_ASSIST_PREVIOUS        &trans  &trans
&trans  &trans  &trans  &kp C_KEYBOARD_INPUT_ASSIST_CANCEL          &kp C_KEYBOARD_INPUT_ASSIST_ACCEPT      &trans    &trans  &kp C_KEYBOARD_INPUT_ASSIST_ACCEPT      &kp C_KEYBOARD_INPUT_ASSIST_CANCEL          &trans  &trans  &trans
                        &trans                                      &trans                                  &trans    &trans  &trans                                  &trans
            >;

            label = "NAV";
        };

        sys_layer {
            bindings = <
           &studio_unlock  &trans  &trans  &trans  &sys_reset     &sys_reset   &trans  &trans  &trans  &studio_unlock
           &trans          &trans  &trans  &trans  &bootloader    &bootloader  &trans  &trans  &trans  &trans
&soft_off  &trans          &trans  &trans  &trans  &trans         &trans       &trans  &trans  &trans  &trans          &soft_off
                                   &trans  &trans  &trans         &trans       &trans  &trans
            >;

            label = "SYS";
        };
    };
};
